var GameLayer = cc.LayerColor.extend({
    init: function() {
        this._super( new cc.Color( 127, 127, 127, 255 ) );
        this.setPosition( new cc.Point( 0, 0 ) );

        this.background = new Background();
        this.background.setPosition( new cc.Point(400,300));
        this.addChild(this.background);

        this.player = new Player();
        this.player.setPosition( new cc.Point( screenWidth / 2 , 100));
        this.addChild( this.player );
        this.player.scheduleUpdate();
    
        this.WIDTH = 20;
        this.HEIGHT = 221;
        this.MAP = [
        	'####################',
        	'#sssssssssss.ssssss#',
        	'#ssssssssss...sssss#',
        	'#sssssssss.....ssss#',
        	'#ssssssss.......sss#',
        	'#sssssss.........ss#',
        	'#ssssss...........s#',
        	'#sssss.............#',
        	'#ssss..............#',
        	'#sss...............#',
        	'#ss##..##..##..##..#',
        	'#s.##..##..##..##..#',
            '#..##..##..##..##..#',
            '#..##..##..##..#####',
        	'#..######..##..##..#',
            '#......##..##..##..#',
        	'#..##..##..##..##..#',
            '#..##..##..######..#',
        	'#..##..##..##..##..#',
            '#..##..######..##..#',
        	'#..##..##..##......#',
            '#..##..##..##..##..#',
        	'#..##..##......##..#',
            '#..##..##..##..##..#',
        	'#..##..##..##..##..#',
            '#..##..##..######..#',
        	'#..##......##..##..#',
            '#..##..##..##..##..#',
        	'#####..##..##......#',
            '#..##..##..##..##..#',
        	'#......##..##..##..#',
            '#..##..##..##..##..#',
        	'#..##..##..##..##..#',
        	'#..##..##..##......#',
        	'#..##..##..##..##..#',
            '#..##..######..##..#',
        	'#..##..##..##..##..#',
            '#......##..##..##..#',
        	'#..##..##..##..##..#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
        	'#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
        	'##..##..######..##.#',
        	'##..##..##..##..##.#',
        	'#..#..#..#..#..#..##',
        	'#..#..#..#..#..#..##',
        	'##..##..##..##..##.#',
        	'##..##..##..##..##.#',
        	'#..#..#..#..#..#..##',
        	'#..#..#..#..#..#..##',
        	'##..##..##..##..##.#',
        	'##..##..##..##..##.#',
        	'#..#..#..#..#..#..##',
        	'#..#..#..#..#..#..##',
        	'##..##..##..##..##.#',
        	'##..##..##..##..##.#',
        	'#..#..#..#..#..#..##',
        	'#..#..#..#..#..#..##',
        	'##..##..##..##..##.#',
        	'##..##..##..##..##.#',
        	'#..#..#..#..#..#..##',
        	'#..#..#..#..#..#..##',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '##................##',
            '###..............###',
            '####............####',
            '#####..........#####',
            '######........######',
            '#######......#######',
            '########....########',
            '#########..#########',
            '#########..#########',
            '#########..#########',
        	'########....########',       	
        	'#######......#######',
        	'######........######',
            '#####..........#####',
            '####............####',
        	'###..............###',       	
        	'##................##',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#...##.........##..#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..#..#..#..#..#..##',
            '##..##..##..##..##.#',
            '###..###..###..###.#',
            '##..##..##..##..##.#',
            '#..#..#..#..#..#..##',
            '##..##..##..##..##.#',
            '###..###..###..###.#',
            '##..##..##..##..##.#',
            '#..#..#..#..#..#..##',
            '##..##..##..##..##.#',
            '###..###..###..###.#',
            '##..##..##..##..##.#',
            '#..#..#..#..#..#..##',
            '##..##..##..##..##.#',
            '###..###..###..###.#',
            '##..##..##..##..##.#',
            '#..#..#..#..#..#..##',
            '##..##..##..##..##.#',
            '#000..000000000..00#',
            '###..###..###..###.#',
            '##..##..##..##..##.#',
            '#..#..#..#..#..#..##',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..#################',
            '#..................#',
            '#..................#',
            '#..................#',
            '#################..#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..#################',
            '#..................#',
            '#..................#',
            '#..................#',
            '#################..#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..#################',
            '#..................#',
            '#..................#',
            '#..................#',
            '#################..#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
            '#..................#',
        ];
        this.npcs = [];
        var npc = null;
        for ( var r = 0; r < this.HEIGHT; r++ ) {
            for ( var c = 0; c < this.WIDTH; c++ ) {
                if ( this.MAP[ r ][ c ] == '#' ) {
                    npc = new Npc();
                    npc.setPosition( cc.p( c * 40 + 20, (this.HEIGHT - r - 1) * 40) );
                    this.addChild( npc );
                    npc.scheduleUpdate();
                    this.npcs.push( npc );
                }
                if ( this.MAP[ r ][ c ] == '0' ) {
                    npc = new FastNpc();
                    npc.setPosition( cc.p( c * 40 + 20, (this.HEIGHT - r - 1) * 400) );
                    this.addChild( npc );
                    npc.scheduleUpdate();
                    this.npcs.push( npc );
                }
                if ( this.MAP[ r ][ c ] == 's' ) {
                    npc = new FasterNpc();
                    npc.setPosition( cc.p( c * 40 + 20, (this.HEIGHT - r - 1) * 400) );
                    this.addChild( npc );
                    npc.scheduleUpdate();
                    this.npcs.push( npc );
                }
            }
        }
        this.score = 0;
        this.scoreLabel = cc.LabelTTF.create(0, 'Arial',32);
        this.scoreLabel.setPosition(cc.p(700,550));
        this.addChild(this.scoreLabel);

        this.addKeyboardHandlers();
        this.scheduleUpdate();
        return true;
    },
    update: function( dt ) {
        var self = this;
        self.score += 0.02;
        self.scoreLabel.setString(Math.floor(self.score));
        this.npcs.forEach( function( npc, i ) {

            var npcX = npc.getPositionX();
            var npcY = npc.getPositionY();
            var playerX = self.player.getPositionX();
            var playerY = self.player.getPositionY();

            if ( Math.abs(npcX - playerX) <= 20 && Math.abs(npcY - playerY) <= 20) {
                if((Math.abs(npcX - playerX) < 5 || Math.abs(npcY - playerY) < 5)||(Math.abs(npcX - playerX) < 16 && Math.abs(npcY - playerY) < 16)){
                    this.scores = new Score();
                    this.scores.setPosition( new cc.Point(400,300));
                    self.addChild(this.scores);

                    cc.audioEngine.playMusic(res.Crash_mp3);

                    self.removeChild(self.scoreLabel);

                    var iScore = cc.LabelTTF.create( Math.floor(self.score), 'Arial',75);
                    iScore.setPosition(cc.p(405,240));
                    self.addChild(iScore);
                    cc.director.pause();
                    return;
                }
            }
        });
    },
    onKeyDown: function( keyCode, event ) {
        if ( keyCode == cc.KEY.left ) {
            this.player.moveLeft();
            cc.audioEngine.playMusic(res.Move_mp3);
        } else if ( keyCode == cc.KEY.right ) {
            this.player.moveRight();
            cc.audioEngine.playMusic(res.Move_mp3);
        } else if ( keyCode == cc.KEY.up ) {
            this.player.moveUp();  
            cc.audioEngine.playMusic(res.Move_mp3);
        } else if (keyCode == cc.KEY.down){
            this.player.moveDown();
            cc.audioEngine.playMusic(res.Move_mp3);
        } else {
            this.player.STOP();
        }
    },
    onKeyUp: function( keyCode, event ) {
        if ( keyCode == cc.KEY.left  || keyCode == cc.KEY.right || keyCode == cc.KEY.up || keyCode == cc.KEY.down) {
            this.player.STOP();
        }
    },
    addKeyboardHandlers: function() {
        var self = this;
        cc.eventManager.addListener({
        event: cc.EventListener.KEYBOARD,
            onKeyPressed : function( keyCode, event ) {
                self.onKeyDown( keyCode, event );
            },
            onKeyReleased: function( keyCode, event ) {
                self.onKeyUp( keyCode, event );
            }
        }, this);
    }
});
var StartScene = cc.Scene.extend({
    onEnter: function() {
        this._super();
        var layer = new GameLayer();
        layer.init();
        this.addChild( layer );
    }
});